services:
  npm:
    build:
      dockerfile_inline: |
        FROM node:20-alpine
        VOLUME /app
        WORKDIR /app
        USER node
        CMD npm install
    container_name: red_npm
    volumes:
      - "$ROOT:/app:delegated"

  postgres:
    image: postgres
    container_name: red_postgres
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=toor
      - POSTGRES_DB=red
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    container_name: red_minio
    environment:
      - MINIO_ROOT_USER=root
      - MINIO_ROOT_PASSWORD=toortoor
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio:/data
    command: server --console-address ":9001" /data
      
  app:
    container_name: red_app
    volumes:
      - "$ROOT:/app:delegated"
    build:
      context: "$ROOT"
      dockerfile_inline: |
        FROM node:20-alpine
        VOLUME /app
        WORKDIR /app
        RUN npm install -g @nestjs/cli
        USER node
        CMD npm run migrate:dev && npm run start:dev
    environment:
      - PORT=8080
      - DATABASE_URL=postgres://root:toor@postgres:5432/red
    ports:
      - "8080:8080"
    depends_on:
      npm:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy

volumes:
  minio: